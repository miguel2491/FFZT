//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Facturafast.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BD_FFEntities : DbContext
    {
        public BD_FFEntities()
            : base("name=BD_FFEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tbc_Clave_STCC> tbc_Clave_STCC { get; set; }
        public virtual DbSet<tbc_Clave_Tipo_Carga> tbc_Clave_Tipo_Carga { get; set; }
        public virtual DbSet<tbc_Codigo_Transporte_Aereo> tbc_Codigo_Transporte_Aereo { get; set; }
        public virtual DbSet<tbc_Config_AutoTransporte> tbc_Config_AutoTransporte { get; set; }
        public virtual DbSet<tbc_Config_Maritima> tbc_Config_Maritima { get; set; }
        public virtual DbSet<tbc_Contactos_Cliente> tbc_Contactos_Cliente { get; set; }
        public virtual DbSet<tbc_Contenedor_Maritimo> tbc_Contenedor_Maritimo { get; set; }
        public virtual DbSet<tbc_Cuentas_Bancarias> tbc_Cuentas_Bancarias { get; set; }
        public virtual DbSet<tbc_Derecho_Paso> tbc_Derecho_Paso { get; set; }
        public virtual DbSet<tbc_Empleados> tbc_Empleados { get; set; }
        public virtual DbSet<tbc_Estados> tbc_Estados { get; set; }
        public virtual DbSet<tbc_Estatus> tbc_Estatus { get; set; }
        public virtual DbSet<tbc_Ferroviarios> tbc_Ferroviarios { get; set; }
        public virtual DbSet<tbc_Figuras_Transporte> tbc_Figuras_Transporte { get; set; }
        public virtual DbSet<tbc_Formas_Pago> tbc_Formas_Pago { get; set; }
        public virtual DbSet<tbc_Fracciones_Arancelaria> tbc_Fracciones_Arancelaria { get; set; }
        public virtual DbSet<tbc_Grupos_Empleados> tbc_Grupos_Empleados { get; set; }
        public virtual DbSet<tbc_IEPS> tbc_IEPS { get; set; }
        public virtual DbSet<tbc_ISR> tbc_ISR { get; set; }
        public virtual DbSet<tbc_IVA> tbc_IVA { get; set; }
        public virtual DbSet<tbc_IVA_Ret> tbc_IVA_Ret { get; set; }
        public virtual DbSet<tbc_Localidades> tbc_Localidades { get; set; }
        public virtual DbSet<tbc_Materiales_Peligrosos> tbc_Materiales_Peligrosos { get; set; }
        public virtual DbSet<tbc_Metodos_Pago> tbc_Metodos_Pago { get; set; }
        public virtual DbSet<tbc_Num_Autorizacion_Naviero> tbc_Num_Autorizacion_Naviero { get; set; }
        public virtual DbSet<tbc_Paises> tbc_Paises { get; set; }
        public virtual DbSet<tbc_Paquetes> tbc_Paquetes { get; set; }
        public virtual DbSet<tbc_Partes_Transporte> tbc_Partes_Transporte { get; set; }
        public virtual DbSet<tbc_Perfiles> tbc_Perfiles { get; set; }
        public virtual DbSet<tbc_Periodicidades_Pago> tbc_Periodicidades_Pago { get; set; }
        public virtual DbSet<tbc_ProdServ> tbc_ProdServ { get; set; }
        public virtual DbSet<tbc_Productos_Servicios> tbc_Productos_Servicios { get; set; }
        public virtual DbSet<tbc_Regimenes> tbc_Regimenes { get; set; }
        public virtual DbSet<tbc_Regimenes_Contratacion> tbc_Regimenes_Contratacion { get; set; }
        public virtual DbSet<tbc_Riesgos_Puesto> tbc_Riesgos_Puesto { get; set; }
        public virtual DbSet<tbc_Timbres> tbc_Timbres { get; set; }
        public virtual DbSet<tbc_Tipos_Comprobante> tbc_Tipos_Comprobante { get; set; }
        public virtual DbSet<tbc_Tipos_Contratos> tbc_Tipos_Contratos { get; set; }
        public virtual DbSet<tbc_Tipos_Embalaje> tbc_Tipos_Embalaje { get; set; }
        public virtual DbSet<tbc_Tipos_Factura> tbc_Tipos_Factura { get; set; }
        public virtual DbSet<tbc_Tipos_Jornada> tbc_Tipos_Jornada { get; set; }
        public virtual DbSet<tbc_Tipos_Moneda> tbc_Tipos_Moneda { get; set; }
        public virtual DbSet<tbc_Tipos_Permiso> tbc_Tipos_Permiso { get; set; }
        public virtual DbSet<tbc_Tipos_Persona> tbc_Tipos_Persona { get; set; }
        public virtual DbSet<tbc_Tipos_Relacion> tbc_Tipos_Relacion { get; set; }
        public virtual DbSet<tbc_Tipos_Transporte> tbc_Tipos_Transporte { get; set; }
        public virtual DbSet<tbc_Tipos_Ubicacion> tbc_Tipos_Ubicacion { get; set; }
        public virtual DbSet<tbc_Ubicaciones> tbc_Ubicaciones { get; set; }
        public virtual DbSet<tbc_Unidades_Medida> tbc_Unidades_Medida { get; set; }
        public virtual DbSet<tbc_Unidades_Peso> tbc_Unidades_Peso { get; set; }
        public virtual DbSet<tbc_Usos_CFDI> tbc_Usos_CFDI { get; set; }
        public virtual DbSet<tbc_Usuarios> tbc_Usuarios { get; set; }
        public virtual DbSet<tbc_Variables_Calculo> tbc_Variables_Calculo { get; set; }
        public virtual DbSet<tbc_Vendedores> tbc_Vendedores { get; set; }
        public virtual DbSet<tbd_Archivos_Descarga> tbd_Archivos_Descarga { get; set; }
        public virtual DbSet<tbd_Autotransporte> tbd_Autotransporte { get; set; }
        public virtual DbSet<tbd_Carta_Porte> tbd_Carta_Porte { get; set; }
        public virtual DbSet<tbd_Cfdi_Uuid> tbd_Cfdi_Uuid { get; set; }
        public virtual DbSet<tbd_Conceptos_Contenedor_Maritimo> tbd_Conceptos_Contenedor_Maritimo { get; set; }
        public virtual DbSet<tbd_Conceptos_Factura> tbd_Conceptos_Factura { get; set; }
        public virtual DbSet<tbd_Conceptos_Nota_Venta> tbd_Conceptos_Nota_Venta { get; set; }
        public virtual DbSet<tbd_Conceptos_Pre_Factura> tbd_Conceptos_Pre_Factura { get; set; }
        public virtual DbSet<tbd_Detalle_Prepago> tbd_Detalle_Prepago { get; set; }
        public virtual DbSet<tbd_Detalles_Servicio_Recurrentes> tbd_Detalles_Servicio_Recurrentes { get; set; }
        public virtual DbSet<tbd_Envios_Correo_Nota> tbd_Envios_Correo_Nota { get; set; }
        public virtual DbSet<tbd_Facturas> tbd_Facturas { get; set; }
        public virtual DbSet<tbd_Figuras> tbd_Figuras { get; set; }
        public virtual DbSet<tbd_Firmas> tbd_Firmas { get; set; }
        public virtual DbSet<tbd_Log_Errores> tbd_Log_Errores { get; set; }
        public virtual DbSet<tbd_Pagos_Nota_Venta> tbd_Pagos_Nota_Venta { get; set; }
        public virtual DbSet<tbd_Parte_Transporte_Figura> tbd_Parte_Transporte_Figura { get; set; }
        public virtual DbSet<tbd_Pre_Carta_Porte> tbd_Pre_Carta_Porte { get; set; }
        public virtual DbSet<tbd_Remolque> tbd_Remolque { get; set; }
        public virtual DbSet<tbd_Servicios_Recurrentes> tbd_Servicios_Recurrentes { get; set; }
        public virtual DbSet<tbd_Solicitudes_Descarga> tbd_Solicitudes_Descarga { get; set; }
        public virtual DbSet<tbd_Transporte_Aereo> tbd_Transporte_Aereo { get; set; }
        public virtual DbSet<tbd_Transporte_Maritimo> tbd_Transporte_Maritimo { get; set; }
        public virtual DbSet<tbd_Ubicacion_Carta_Porte> tbd_Ubicacion_Carta_Porte { get; set; }
        public virtual DbSet<tbr_Vendedor_Cliente> tbr_Vendedor_Cliente { get; set; }
        public virtual DbSet<tbd_Mercancias> tbd_Mercancias { get; set; }
        public virtual DbSet<tbd_Cancelacion_Factura> tbd_Cancelacion_Factura { get; set; }
        public virtual DbSet<tbc_Sub_Tipo_Rem> tbc_Sub_Tipo_Rem { get; set; }
        public virtual DbSet<tbd_Pre_Factura> tbd_Pre_Factura { get; set; }
        public virtual DbSet<tbc_Clientes> tbc_Clientes { get; set; }
        public virtual DbSet<tbd_Pre_Pagos> tbd_Pre_Pagos { get; set; }
        public virtual DbSet<tbd_Cobros> tbd_Cobros { get; set; }
        public virtual DbSet<tbd_Notas_Venta> tbd_Notas_Venta { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
